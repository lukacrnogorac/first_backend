{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger First backend"
  },
  "host": "localhost:5000",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "Authorization": {
      "description": "For accessing the API a valid JWT token must be passed in all the queries in\nthe 'Authorization' header.\n\n\nA valid JWT token is generated by the API and retourned as answer of a call\nto the route /login giving a valid user & password.\n\n\nThe following syntax must be used in the 'Authorization' header :\n\n    Bearer: xxxxxx.yyyyyyy.zzzzzz\n",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/books": {
      "get": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Returns a list of books.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "books"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "writer",
            "type": "string",
            "description": "Books of wanted writer if he is in database"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all books",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login user.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "authentication"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "schema": {
              "required": [
                "username",
                "password"
              ],
              "properties": {
                "username": {
                  "type": "string",
                  "example": "myusername"
                },
                "password": {
                  "type": "string",
                  "example": "mypassword"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/registration": {
      "post": {
        "summary": "User registration",
        "produces": [
          "application/json"
        ],
        "tags": [
          "authentication"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "schema": {
              "required": [
                "firstName",
                "lastName",
                "username",
                "password",
                "email"
              ],
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Marko"
                },
                "lastName": {
                  "type": "string",
                  "example": "Markovic"
                },
                "username": {
                  "type": "string",
                  "example": "mmarko1"
                },
                "password": {
                  "type": "string",
                  "example": "markovasifra"
                },
                "email": {
                  "type": "string",
                  "example": "mmarko01@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Books": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "title": {
          "type": "string",
          "example": "My first book"
        },
        "number_of_pages": {
          "type": "integer",
          "format": "int64",
          "example": 120
        },
        "year_of_publish": {
          "type": "integer",
          "format": "int64",
          "example": 2012
        },
        "number_of_books": {
          "type": "integer",
          "format": "int64",
          "example": 2
        },
        "writerId": {
          "type": "integer",
          "format": "int64",
          "example": 2
        }
      }
    },
    "Token": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "Error": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "Unexpected error"
        }
      }
    }
  }
}